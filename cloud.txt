/home/ec2-user/

sudo
#install docker
yum install docker

#install docker-compose
 yum install epel-release
 yum install -y python-pip
 pip install docker-compose
 yum upgrade python*

#install go
wget https://storage.googleapis.com/golang/go1.9.2.linux-amd64.tar.gz
tar -zxvf  go1.9.2.linux-amd64.tar.gz -C /usr/local/
export PATH=$PATH:/usr/local/go/bin

#install node.js runtime and NPM
NVM
curl https://raw.githubusercontent.com/creationix/nvm/v0.13.1/install.sh | bash
source ~/.bash_profile
nvm install v8.9
#lock npm version
npm install npm@5.6.0 -g

#python
python --version ->2.7

#start docker service as daemon
sudo service docker start

#git install
yum install git

#set up swarm
machine1
docker swarm init
docker swarm join-token manager

machine2
docker swarm join — token SWMTKN-1–**token** machine1:2377

machine3
docker swarm join — token SWMTKN-1–**token** machine1:2377

#create a overlay netw0rk

machine1:
docker network create --attachable --driver overlay ct-net


All Machines:
#download code
git clone https://github.com/sarapara/hyperledger-clinical-trial.git

#get fabric platform executables
mkdir fabric-bin && cd fabric-bin
curl -sSL https://goo.gl/6wtTN5 | bash -s 1.1.0
export PATH=/home/ec2-user/fabric-bin/fabric-samples/bin:$PATH

from your box: copy the aws pem file to the machine1
scp -i ~/.ssh/saranyapocec2.pem ~/.ssh/saranyapocec2.pem ec2-user@54.204.141.115:~/.ssh/.

machine1:
./generate.sh
#copy artifacts to machine2
scp -r -i /home/ec2-user/.ssh/saranyapocec2.pem ./channel-artifacts ec2-user@ip-172-31-18-148:/home/ec2-user/hyperledger-clinical-trial/.
scp -r -i /home/ec2-user/.ssh/saranyapocec2.pem ./crypto-config ec2-user@ip-172-31-18-148:/home/ec2-user/hyperledger-clinical-trial/.

#copy artifacts to machine3
scp -r -i /home/ec2-user/.ssh/saranyapocec2.pem ./channel-artifacts ec2-user@ip-172-31-20-201:/home/ec2-user/hyperledger-clinical-trial/.
scp -r -i /home/ec2-user/.ssh/saranyapocec2.pem ./crypto-config ec2-user@ip-172-31-20-201:/home/ec2-user/hyperledger-clinical-trial/.

#machine1(Pfizer)
-----------------
cd hyperledger-clinical-trial
1.CA

docker run --rm -it -d --network="ct-net" --name ca_peerPfizer -e FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server -e FABRIC_CA_SERVER_CA_NAME=ca-pfizer -e FABRIC_CA_SERVER_TLS_ENABLED=true -e FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.pfizer.com-cert.pem -e FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/a06cfd4820356cb18572136bb9785ecd31f7bf97f3d6ef70b2eeb72f4fdcb1a9_sk -p 7054:7054 -v $(pwd)/crypto-config/peerOrganizations/pfizer.com/ca/:/etc/hyperledger/fabric-ca-server-config -e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=my-net hyperledger/fabric-ca:latest sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.pfizer.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/a06cfd4820356cb18572136bb9785ecd31f7bf97f3d6ef70b2eeb72f4fdcb1a9_sk -b admin:adminpw -d'

2. peer0
docker run --rm -it -d --link orderer.consilx.com:orderer.consilx.com --network="ct-net" --name peer0.pfizer.com -p 7051:7051 -p 7053:7053 -e CORE_PEER_ID=peer0.pfizer.com -e CORE_PEER_ADDRESS=peer0.pfizer.com:7051 -e CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.pfizer.com:7051 -e CORE_PEER_LOCALMSPID=PfizerMSP -e CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock -e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=ct-net -e CORE_LOGGING_LEVEL=INFO -e CORE_PEER_TLS_ENABLED=true -e CORE_PEER_GOSSIP_USELEADERELECTION=false -e CORE_PEER_GOSSIP_ORGLEADER=true -e CORE_PEER_PROFILE_ENABLED=true -e CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt -e CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key -e CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt -v /var/run/:/host/var/run/ -v $(pwd)/crypto-config/peerOrganizations/pfizer.com/peers/peer0.pfizer.com/msp:/etc/hyperledger/fabric/msp -v $(pwd)/crypto-config/peerOrganizations/pfizer.com/peers/peer0.pfizer.com/tls:/etc/hyperledger/fabric/tls -v peer0.pfizer.com:/var/hyperledger/production -w /opt/gopath/src/github.com/hyperledger/fabric/peer hyperledger/fabric-peer:latest peer node start


#machine2(manipalhospital.org)
1. CA

docker run --rm -d -it --network="ct-net" --name ca_peerManipalHospital -e FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server -e FABRIC_CA_SERVER_CA_NAME=ca-manipalhospital -e FABRIC_CA_SERVER_TLS_ENABLED=true -e FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.manipalhospital.org-cert.pem -e FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/d4e2afae6f3282588b0f31025baf4ab76d8cb97005b03c40cb236223b4e8c880_sk -p 8054:7054 -v $(pwd)/crypto-config/peerOrganizations/manipalhospital.org/ca/:/etc/hyperledger/fabric-ca-server-config -e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=ct-net hyperledger/fabric-ca:latest sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/nipalhospital.org-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/d4e2afae6f3282588b0f31025baf4ab76d8cb97005b03c40cb236223b4e8c880_sk -b admin:adminpw -d'

2. peer0

docker run --rm -d -it --link orderer.consilx.com:orderer.consilx.com --network="ct-net" --name peer0.manipalhospital.org -p 9051:7051 -p 9053:7053 -e CORE_PEER_ID=peer0.manipalhospital.org -e CORE_PEER_ADDRESS=peer0.manipalhospital.org:7051 -e CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.manipalhospital.org:7051 -e CORE_PEER_LOCALMSPID=ManipalHospitalMSP -e CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock -e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=ct-net -e CORE_LOGGING_LEVEL=INFO -e CORE_PEER_TLS_ENABLED=true -e CORE_PEER_GOSSIP_USELEADERELECTION=false -e CORE_PEER_GOSSIP_ORGLEADER=true -e CORE_PEER_PROFILE_ENABLED=true -e CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt -e CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key -e CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt -v /var/run/:/host/var/run/ -v $(pwd)/crypto-config/peerOrganizations/manipalhospital.org/peers/peer0.manipalhospital.org/msp:/etc/hyperledger/fabric/msp -v $(pwd)/crypto-config/peerOrganizations/manipalhospital.org/peers/peer0.manipalhospital.org/tls:/etc/hyperledger/fabric/tls -v peer0.manipalhospital.org:/var/hyperledger/production -w /opt/gopath/src/github.com/hyperledger/fabric/peer hyperledger/fabric-peer:latest peer node start

#machine3
1. Orderer
docker run --rm -it -d --network="ct-net" --name orderer.consilx.com -p 7050:7050 -e ORDERER_GENERAL_LOGLEVEL=DEBUG -e ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 -e ORDERER_GENERAL_GENESISMETHOD=file -e ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block -e ORDERER_GENERAL_LOCALMSPID=ConsilXMSP -e ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp -e ORDERER_GENERAL_TLS_ENABLED=true -e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=ct-net  -e CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock -e ORDERER_GENERAL_TLS_ENABLED=true -e ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key -e ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt -e ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt,/var/hyperledger/peers/pfizer/tls/ca.crt,/var/hyperledger/peers/manipalhospital/tls/ca.crt] -v $(pwd)/channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block -v $(pwd)/crypto-config/ordererOrganizations/consilx.com/orderers/orderer.consilx.com/msp:/var/hyperledger/orderer/msp -v $(pwd)/crypto-config/ordererOrganizations/consilx.com/orderers/orderer.consilx.com/tls/:/var/hyperledger/orderer/tls -v $(pwd)/crypto-config/peerOrganizations/pfizer.com/peers/peer0.pfizer.com/tls/:/var/hyperledger/peers/pfizer/tls -v $(pwd)/crypto-config/peerOrganizations/manipalhospital.org/peers/peer0.manipalhospital.org/tls/:/var/hyperledger/peers/manipalhospital/tls -v orderer.consilx.com:/var/hyperledger/production/orderer -w /opt/gopath/src/github.com/hyperledger/fabric hyperledger/fabric-orderer:latest orderer

2. cli

docker run --rm -it --network="ct-net" --name cli --link orderer.consilx.com:orderer.consilx.com --link peer0.pfizer.com:peer0.pfizer.com --link peer0.manipalhospital.org:peer0.manipalhospital.org -p 12051:7051 -p 12053:7053 -e GOPATH=/opt/gopath -e CORE_PEER_LOCALMSPID=PfizerMSP -e CORE_PEER_TLS_ENABLED=true -e CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock -e CORE_LOGGING_LEVEL=DEBUG -e CORE_PEER_ID=cli -e CORE_PEER_ADDRESS=peer0.pfizer.org:7051 -e CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/pfizer.com/users/Admin@pfizer.com/msp -e CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=ct-net -e CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/pfizer.com/peers/peer0.pfizer.com/tls/server.crt -e CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/pfizer.com/peers/peer0.pfizer.com/tls/server.key -e CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/pfizer.com/peers/peer0.pfizer.com/tls/ca.crt -v /var/run/:/host/var/run/ -v $(pwd)/chaincode/:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go -v $(pwd)/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ -v $(pwd)/scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/ -v $(pwd)/channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts -w /opt/gopath/src/github.com/hyperledger/fabric/peer hyperledger/fabric-tools /bin/bash -c './scripts/script1.sh'
